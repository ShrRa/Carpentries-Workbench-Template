#------------------------------------------------------------
# Values for this lesson.
#------------------------------------------------------------

# Which carpentry is this (swc, dc, lc, or cp)?
# swc: Software Carpentry
# dc: Data Carpentry
# lc: Library Carpentry
# cp: Carpentries (to use for instructor training for instance)
# incubator: The Carpentries Incubator
carpentry: 'incubator'

# Overall title for pages.
title: 'Intermediate Research Software Development for LSST' # FIXME

# Date the lesson was created (YYYY-MM-DD, this is empty by default)
created: ~ # FIXME

# Comma-separated list of keywords for the lesson
keywords: 'software, data, lesson, The Carpentries, Python, LSST, astronomy' # FIXME

# Life cycle stage of the lesson
# possible values: pre-alpha, alpha, beta, stable
life_cycle: 'pre-alpha' # FIXME

# License of the lesson
license: 'CC-BY 4.0'

# Link to the source repository for this lesson
source: 'https://shrra.github.io/Carpentries-Workbench-Template/' # FIXME

# Default branch of your lesson
branch: 'main'

# Who to contact if there are any issues
contact: 'team@carpentries.org' # FIXME

# Navigation ------------------------------------------------
#
# Use the following menu items to specify the order of
# individual pages in each dropdown section. Leave blank to
# include all pages in the folder.
#
# Example -------------
#
# episodes:
# - introduction.md
# - first-steps.md
#
# learners:
# - setup.md
#
# instructors:
# - instructor-notes.md
#
# profiles:
# - one-learner.md
# - another-learner.md

# Order of episodes in your lesson
episodes: 
- introduction.md
- setting-the-scene.md
- s1-setting-up-environment-for-collaborative-code-development.md
#- s1-introduction-to-our-software-project.md
#- s1-virtual-environments-for-software-development.md
#- s1-integrated-software-development-environments.md
#- s1-collaborative-software-development-using-git-and-github.md
#- s1-python-code-style-conventions.md
#- s1-verifying-code-style-using-linters.md
#- s2-ensuring-correctness-of-software-at-scale.md
#- s2-automatically-testing-software.md
#- s2-scaling-up-unit-testing.md
#- s2-continuous-integration-for-automated-testing.md
#- s2-diagnosing-issues-and-improving-robustness.md
#- s3-software-development-as-a-process.md
#- s3-software-requirements.md
#- s3-software-architecture-and-design.md
#- s3-programming-paradigms.md
#- s3-functional-programming.md
#- s3-object-oriented-programming.md
#- s3-architecture-revisited:-extending-software.md
#- s4-collaborative-software-development-for-reuse.md
#- s4-developing-software-in-a-team:-code-review.md
#- s4-preparing-software-for-reuse-and-release.md
#- s4-packaging-code-for-release-and-distribution.md
#- s5-managing-and-improving-software-over-its-lifetime.md
#- s5-managing-a-collaborative-software-project.md
#- s5-assessing-software-for-suitability-and-improvement.md
#- s5-software-improvement-through-feedback.md
#- wrap-up.md

# Information for Learners
learners: 

# Information for Instructors
instructors: 

# Learner Profiles
profiles: 

# Customisation ---------------------------------------------
#
# This space below is where custom yaml items (e.g. pinning
# sandpaper and varnish versions) should live


